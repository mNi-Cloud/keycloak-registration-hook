name: release-plugin
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  check_if_version_upgraded:
    runs-on: ubuntu-latest
    outputs:
      is_upgraded_version: ${{ steps.check_version.outputs.is_upgraded_version }}
      to_version: ${{ steps.check_version.outputs.to_version }}
      is_pre_release: ${{ steps.check_version.outputs.is_pre_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: check_version
        run: |
          VERSION=$(grep -oP "version\s*'\K[^']+" build.gradle || grep -oP 'version\s*"\K[^"]+' build.gradle || echo "0.0.0")
          
          if git rev-parse HEAD^ >/dev/null 2>&1 && git show HEAD^:build.gradle >/dev/null 2>&1; then
            PREV_VERSION=$(git show HEAD^:build.gradle | grep -oP "version\s*'\K[^']+" || git show HEAD^:build.gradle | grep -oP 'version\s*"\K[^"]+' || echo "0.0.0")
          else
            PREV_VERSION="0.0.0"
          fi
          
          echo "Current version: $VERSION"
          echo "Previous version: $PREV_VERSION"
          
          if [ "$VERSION" != "$PREV_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $VERSION"
            echo "is_upgraded_version=true" >> $GITHUB_OUTPUT
            echo "to_version=$VERSION" >> $GITHUB_OUTPUT
            if [[ "$VERSION" == *"-"* ]]; then
              echo "is_pre_release=true" >> $GITHUB_OUTPUT
            else
              echo "is_pre_release=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Version unchanged"
            echo "is_upgraded_version=false" >> $GITHUB_OUTPUT
          fi

  create_github_release:
    runs-on: ubuntu-latest
    needs: check_if_version_upgraded
    if: needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "7.4"
        
      - name: Build with Gradle
        run: gradle jar
          
      - uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
          tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ needs.check_if_version_upgraded.outputs.is_pre_release == 'true' }}
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-custom-keycloak:
    needs: [check_if_version_upgraded, create_github_release]
    if: |
      needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger custom-keycloak workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'custom-keycloak',
              workflow_id: 'release-image.yaml',
              ref: 'main',
              inputs: {
                plugin_version: '${{ needs.check_if_version_upgraded.outputs.to_version }}'
              }
            })
